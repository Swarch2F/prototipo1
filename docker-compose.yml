version: '3.8'

services:
  # ----- Servicio de PostgreSQL (para component-1) -----
  web:
    build: 
      context: ./components/component-1
      dockerfile: Dockerfile
    image: component-1:latest
    container_name: api-Rest
    command: gunicorn
    restart: always
    volumes:
      - ./components/component-1:/app
    ports:
      - "8000:8000"
    environment:
      - DB_HOST=db
      - DB_NAME=sia_colegios
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_PORT=5432
      - LOAD_INITIAL_DATA=true
    depends_on:
      - db
    networks:
      - sia_network

  db:
    image: postgres:17-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
      - ./components/component-1/init-db.sh:/docker-entrypoint-initdb.d/init-db.sh
    environment:
      - POSTGRES_DB=sia_colegios
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_ENCODING=UTF8
      - POSTGRES_LC_COLLATE=es_CO.utf8
      - POSTGRES_LC_CTYPE=es_CO.utf8
    ports:
      - "5432:5432"
    networks:
      - sia_network

  # ----- Servicio de MongoDB (para component-2) -----
  mongoDB:
    image: mongo:6.0
    restart: always
    container_name: prototipo1-mongo
    ports:
      - "27018:27017"
    volumes:
      - mongo_data:/data/db

  # ----- API de component-2 -----
  component-2-api:
    build:
      context: ./components/component-2
      dockerfile: Dockerfile
    image: component-2:latest
    container_name: api-graphql
    ports:
      - "8080:8080"
    environment:
      SPRING_DATA_MONGODB_URI: mongodb://mongoDB:27017/db
      SPRING_GRAPHQL_SCHEMA_LOCATION: classpath:/graphql/
    depends_on:
      - mongoDB

  # ----- App de component-3 -----
  component-3-app:
    build:
      context: ./components/component-3
      dockerfile: Dockerfile
    image: component-3:latest
    container_name: frontend-nest
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production

volumes:
  mongo_data:
  postgres_data:
networks:
  sia_network:
    driver: bridge 

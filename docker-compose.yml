version: '3.8'

services:
  # ----- API REST con Postgres -----
  gx_be_estcur:
    build: 
      context: ./components/component-1
      dockerfile: Dockerfile
    image: gx_be_estcur:latest
    container_name: gx_be_estcur
    command: gunicorn
    restart: always
    volumes:
      - ./components/component-1:/app
    ports:
      - "8000:8000"
    environment:
      - DB_HOST=gx_db_estcur
      - DB_NAME=sia_colegios
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_PORT=5432
      - LOAD_INITIAL_DATA=true
    depends_on:
      - gx_db_estcur

#--- Base de datos Relacional Postgres---
  gx_db_estcur:
    container_name: gx_db_estcur
    image: postgres:17-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
      - ./components/component-1/init-db.sh:/docker-entrypoint-initdb.d/init-db.sh
    environment:
      - POSTGRES_DB=sia_colegios
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_ENCODING=UTF8
      - POSTGRES_LC_COLLATE=es_CO.utf8
      - POSTGRES_LC_CTYPE=es_CO.utf8
    ports:
      - "5432:5432"


  # ----- Base de datos NoSQL MongoDB -----
  gx_db_proasigcal:
    image: mongo:6.0
    restart: always
    container_name: gx_db_proasigcal
    ports:
      - "27018:27017"
    volumes:
      - mongo_data:/data/db

  # ----- API GraphQL con MongoDB -----
  gx_be_proasigcal:
    build:
      context: ./components/component-2
      dockerfile: Dockerfile
    image: gx_be_proasigcal:latest
    container_name: gx_be_proasigcal
    ports:
      - "8080:8080"
    environment:
      SPRING_DATA_MONGODB_URI: mongodb://gx_db_proasigcal:27017/db
      SPRING_GRAPHQL_SCHEMA_LOCATION: classpath:/graphql/
    depends_on:
      - gx_db_proasigcal

  # ----- App de component-3 -----
  gx_fe_gradex:
    build:
      context: ./components/component-3
      dockerfile: Dockerfile
    image: gx_fe_gradex:latest
    container_name: gx_fe_gradex
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production

volumes:
  mongo_data:
  postgres_data:

